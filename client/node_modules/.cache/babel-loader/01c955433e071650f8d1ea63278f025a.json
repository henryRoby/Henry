{"ast":null,"code":"import _classCallCheck from \"/home/dev/Bureau/Henry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Bureau/Henry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Bureau/Henry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Bureau/Henry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Bureau/Henry/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Bureau/Henry/client/src/components/layout/components/form.js\";\nimport React, { Component } from 'react';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this));\n\n    _this.getName = function (e) {\n      var username = e.target.value;\n\n      _this.setState({\n        name: username\n      });\n\n      console.log(_this.state.name);\n    };\n\n    _this.getEmail = function (e) {\n      var userEmail = e.target.value; //the most important thing is that we use a RegEx\n      //in order to manage the input of the email\n      //at least we can get a some what valid email\n\n      if (userEmail.match(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/)) {\n        _this.setState({\n          email: userEmail\n        });\n      } else {\n        _this.setState({\n          email: \"\"\n        });\n\n        console.log(\"Incorrect Email, must match Expression\");\n      }\n\n      console.log(_this.state.email);\n    };\n\n    _this.getDescription = function (e) {\n      var userMessage = e.target.value;\n\n      _this.setState({\n        message: userMessage\n      });\n\n      console.log(_this.state.message);\n    };\n\n    _this.submitForm = function (e) {\n      e.preventDefault();\n\n      if (_this.state.name === \"\" || _this.state.email === \"\" || _this.state.message === \"\") {\n        _this.setState({\n          formError: true\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          formError: false\n        });\n\n        console.log(\"UserData: {\\n            Username: \".concat(_this.state.name, \",\\n            Email: \").concat(_this.state.email, \",\\n            Message: \").concat(_this.state.message, \"\\n        }\"));\n        console.log(\"form sent\");\n      }\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      formError: false\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.formError && React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Fill all the input fields please.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Fill in the next form to send us a message\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your name here please\",\n        onChange: this.getName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"We will contact you after reviewing your message\",\n        onChange: this.getEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Message\"), React.createElement(\"textarea\", {\n        onChange: this.getDescription,\n        maxLength: \"450\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"We will answer as soon as possible\"), React.createElement(\"input\", {\n        type: \"submit\",\n        name: \"submit\",\n        value: \"Send\",\n        onClick: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/dev/Bureau/Henry/client/src/components/layout/components/form.js"],"names":["React","Component","Form","getName","e","username","target","value","setState","name","console","log","state","getEmail","userEmail","match","email","getDescription","userMessage","message","submitForm","preventDefault","formError"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n  constructor(){\n      super();\n      this.state = {\n          name : \"\",\n          email : \"\",\n          message : \"\",\n          formError: false\n      }\n  }\n\n  getName = (e) =>{\n    let username = e.target.value; \n    this.setState({\n        name: username\n    });\n    console.log(this.state.name);\n  }\n  \n  \n  getEmail = (e) =>{\n    let userEmail = e.target.value; \n    //the most important thing is that we use a RegEx\n    //in order to manage the input of the email\n    //at least we can get a some what valid email\n    if(userEmail.match(/^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/)){\n      this.setState({\n        email: userEmail\n    });\n      }else{\n        this.setState({\n          email: \"\"\n      });\n      console.log(\"Incorrect Email, must match Expression\");\n    }\n  \n    console.log(this.state.email);\n  }\n\n  \n  getDescription = (e) =>{\n    let userMessage = e.target.value; \n    this.setState({\n        message: userMessage\n    });\n    console.log(this.state.message);\n  }\n  //send the form\n  submitForm = (e) =>{\n    e.preventDefault();\n\n    if(this.state.name === \"\" || this.state.email === \"\" || this.state.message === \"\" ){\n     this.setState({\n        formError: true\n     })\n       return false;\n    }else{\n        this.setState({\n            formError: false\n         })\n        console.log(`UserData: {\n            Username: ${this.state.name},\n            Email: ${this.state.email},\n            Message: ${this.state.message}\n        }`)\n    \n    \n        console.log(\"form sent\")\n    \n    }\n \n  }\n\n  render() {\n\n  \n\n    return (\n        <form>\n          {/* I am just sending a basic error message */}\n              {this.state.formError &&\n                <p className=\"error\">\n                    Fill all the input fields please.\n                </p>\n              }\n              <p>Fill in the next form to send us a message</p>\n              <div>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Your name here please\" onChange={this.getName} />\n              </div>\n              <div>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" placeholder=\"We will contact you after reviewing your message\" onChange={this.getEmail} />\n              </div>\n              <div>\n                <label htmlFor=\"name\">Message</label>\n                <textarea onChange={this.getDescription} maxLength=\"450\"></textarea>\n\n              </div>\n              <div>\n                <p>We will answer as soon as possible</p>\n                <input type=\"submit\" name=\"submit\" value=\"Send\" onClick= {this.submitForm} />\n\n              </div>\n              \n            </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}